{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAKgC,MAA1BC,EAAOC,SAASC,cAAc,SAGK,IACrCC,EAAY,KACZC,EAAc,KAGc,SAAvBC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAkCbP,EAAKc,iBAAiB,UA7BAC,IACpBA,EAAEC,iBAG0B,MAC1BC,UAAYV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAGmCC,WAA5BC,OAAOL,EAAMM,OAC1BrB,EAAYoB,OAAOJ,EAAKK,OACxBpB,EAAcmB,OAAOH,EAAOI,OAEsB,IAA7C,IAAIC,EAAI,EAAGA,GAAKrB,EAAaqB,GAAI,EACpCpB,EAAcoB,EAAGH,YACdI,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA6B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA6B,OAAOG,QAAQ,sBAAoBxB,QAAiBC,MAAU,IAGlEe,YAAcnB,EAGEY,EAAhBM,cAAcU,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["// імпорт елементу Notify з бібліотеки Notiflix\nimport { Notify } from 'notiflix';\n// Додатковий імпорт стилів\nimport \"notiflix/dist/notiflix-3.2.6.min.css\"\n\n// отрумуємо посилання на елемент DOM форми\nconst form = document.querySelector('.form');\n\n// оголошуємо змінні для запису значень введених в input\nlet ut = null;\nlet stepInput = null;\nlet amountInput = null;\n\n// функція, що створює та повертає проміс\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// обробник при відправці форми\nconst submitHandler = e => {\n  e.preventDefault();\n  \n  // деструктуризуємо дані з інпутів\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  // записуємо отримані дані до відповідних змінних\n  delayInput = Number(delay.value);\n  stepInput = Number(step.value);\n  amountInput = Number(amount.value);\n// цикл для  виклику функції createPromise стільки разів, скільки ввели в поле amount\n  for (let i = 1; i <= amountInput; i+= 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInput += stepInput;\n  }\n// очищення форми після submit\n  e.currentTarget.reset();\n};\n\n// встановленя слухача для події submit\nform.addEventListener('submit', submitHandler);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","delayInput","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.ab56789d.js.map"}